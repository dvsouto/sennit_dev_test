swagger: "2.0"
info:
  description: "Documentação da API"
  version: "1.0.0"
  title: "Dev Test API"
  contact:
    email: "davi.souto@gmail.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "localhost:8001"
basePath: "/api"
tags:
- name: "Sessão"
  description: "Sessão na API"
  # externalDocs:
  #   description: "Find out more"
  #   url: "http://swagger.io"
- name: "Pessoas"
  description: "CRUD de Pessoas"
# - name: "user"
  # description: "Operations about user"
  # externalDocs:
    # description: "Find out more about our store"
    # url: "http://swagger.io"
schemes:
- "http"
paths:
  /token:
    post:
      tags:
      - "Sessão"
      summary: "Criar token para acessar a aplicação"
      description: ""
      operationId: "auth_login"
      consumes:
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      parameters:
      - in: "formData"
        name: "usuario"
        required: true
        type: "string"

      - in: "formData"
        name: "senha"
        required: true
        type: "string"
      responses:
        200:
          description: "success"
          schema:
            $ref: "#/definitions/ApiResponse"
        401:
          description: "error"
            
  /token/{token}:
    delete:
      tags:
      - "Sessão"
      summary: "Finalizar sessão"
      description: ""
      operationId: "auth_logout"
      consumes:
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      parameters:
      - name: "token"
        in: "path"
        description: "Token"
        required: true
        type: "string"
      responses:
        200:
          description: "success"
          schema:
            $ref: "#/definitions/ApiResponse"
        401:
          description: "error"
    get:
      tags:
      - "Sessão"
      summary: "Recuperar dados da sessão"
      description: ""
      operationId: "auth_token"
      consumes:
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      parameters:
      - name: "token"
        in: "path"
        description: "Token"
        required: true
        type: "string"
      responses:
        200:
          description: "success"
          schema:
            $ref: "#/definitions/ApiResponse"
        401:
          description: "error"
      # security:
      # - petstore_auth:
      #   - "write:pets"
      #   - "read:pets"
    # put:
    #   tags:
    #   - "pet"
    #   summary: "Update an existing pet"
    #   description: ""
    #   operationId: "updatePet"
    #   consumes:
    #   - "application/json"
    #   - "application/xml"
    #   produces:
    #   - "application/xml"
    #   - "application/json"
    #   parameters:
    #   - in: "body"
    #     name: "body"
    #     description: "Pet object that needs to be added to the store"
    #     required: true
    #     schema:
    #       $ref: "#/definitions/Pet"
    #   responses:
    #     400:
    #       description: "Invalid ID supplied"
    #     404:
    #       description: "Pet not found"
    #     405:
    #       description: "Validation exception"
    #   security:
    #   - petstore_auth:
    #     - "write:pets"
    #     - "read:pets"
    
    
  /pessoa/list:
      get:
        tags:
        - "Pessoas"
        summary: "Listar pessoas"
        description: ""
        operationId: "pessoa_list"
        consumes:
        - "application/x-www-form-urlencoded"
        produces:
        - "application/json"
        parameters:
        - name: "X-Auth-Token"
          in: "header"
          description: "Token"
          required: true
          type: "string"
        responses:
          200:
            description: "success"
            schema:
              $ref: "#/definitions/ApiResponse"
          401:
            description: "error"

  /pessoa/get/{id}:
      get:
        tags:
        - "Pessoas"
        summary: "Recuperar pessoa"
        description: ""
        operationId: "pessoa_get"
        consumes:
        - "application/x-www-form-urlencoded"
        produces:
        - "application/json"
        parameters:
        - name: "X-Auth-Token"
          in: "header"
          description: "Token"
          required: true
          type: "string"

        - name: "id"
          in: "path"
          required: true
          type: integer
        responses:
          200:
            description: "success"
            schema:
              $ref: "#/definitions/ApiResponse"
          401:
            description: "error"
            
  /pessoa/create:
      post:
        tags:
        - "Pessoas"
        summary: "Cadastrar pessoa"
        description: ""
        operationId: "pessoa_create"
        consumes:
        - "application/x-www-form-urlencoded"
        produces:
        - "application/json"
        parameters:
        - name: "X-Auth-Token"
          in: "header"
          description: "Token"
          required: true
          type: "string"

        - name: "nome"
          in: "formData"
          required: true
          description: "Nome da pessoa"
          type: "string"
          
        - name: "email"
          in: "formData"
          required: true
          type: "string"
          description: "Email da pessoa"
        responses:
          200:
            description: "success"
            schema:
              $ref: "#/definitions/ApiResponse"
          401:
            description: "error"
            
  /pessoa/update/{id}:
      put:
        tags:
        - "Pessoas"
        summary: "Atualizar pessoa"
        description: ""
        operationId: "pessoa_update"
        consumes:
        - "application/x-www-form-urlencoded"
        produces:
        - "application/json"
        parameters:
        - name: "X-Auth-Token"
          in: "header"
          description: "Token"
          required: true
          type: "string"

        - name: "id"
          in: "path"
          required: true
          type: integer

        - name: "nome"
          in: "formData"
          required: false
          description: "Nome da pessoa"
          type: "string"
          
        - name: "email"
          in: "formData"
          required: false
          description: "Email da pessoa"
          type: "string"
        responses:
          200:
            description: "success"
            schema:
              $ref: "#/definitions/ApiResponse"
          401:
            description: "error"
            
  /pessoa/delete/{id}:
      delete:
        tags:
        - "Pessoas"
        summary: "Remover pessoa"
        description: ""
        operationId: "pessoa_delete"
        consumes:
        - "application/x-www-form-urlencoded"
        produces:
        - "application/json"
        parameters:
        - name: "X-Auth-Token"
          in: "header"
          description: "Token"
          required: true
          type: "string"

        - name: "id"
          in: "path"
          required: true
          type: integer
        responses:
          200:
            description: "success"
            schema:
              $ref: "#/definitions/ApiResponse"
          401:
            description: "error"

# securityDefinitions:
#   auth:
#     type: "oauth2"
#     # authorizationUrl: "http://petstore.swagger.io/oauth/dialog"
#     flow: "implicit"
#     # scopes:
#       # write:pets: "modify pets in your account"
#       # read:pets: "read your pets"
#   token:
#     type: "apiKey"
#     name: "token"
#     in: "header"
definitions:
  ApiResponse:
    type: "object"
    properties:
      status:
        type: "string"
      message:
        type: "string"  
      data:
        type: "object"
      code:
        type: "integer"

# externalDocs:
#   description: "Find out more about Swagger"
#   url: "http://swagger.io"